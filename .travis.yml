os:
  - linux
sudo: required
language: java
jdk:
  - openjdk11
services:
  - docker
before_install:
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo rm /usr/local/bin/docker-compose
  - sudo mv docker-compose /usr/local/bin
install:
  - "./mvnw -e de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -B -V"
cache:
  directories:
    - .mvn/wrapper
    - $HOME/.m2
before_script:
  - |
    MAVEN_DEPLOY_SKIP="true"
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      if [ "$TRAVIS_BRANCH" = 'master' ]; then
        MAVEN_DEPLOY_SKIP="false"
        PROJECT_VERSION="1.0.${TRAVIS_BUILD_NUMBER}.RELEASE"
      else
        PROJECT_VERSION="${TRAVIS_BRANCH}-SNAPSHOT"
      fi
    else
      PROJECT_VERSION="${TRAVIS_PULL_REQUEST_BRANCH}-SNAPSHOT"
    fi
    export MAVEN_DEPLOY_SKIP
    export PROJECT_VERSION=$(echo $PROJECT_VERSION | sed -r s/[\\/:\"\<\>\|?*]/-/g)

  - |
    if [ $MAVEN_DEPLOY_SKIP == "false" ]; then
      openssl aes-256-cbc -K $encrypted_a3a4db86818a_key -iv $encrypted_a3a4db86818a_iv \
      -in continuous-deployment/payworks_sign_key.asc.enc -d | gpg --fast-import
      echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    fi

  - "./mvnw -e -DnewVersion=${PROJECT_VERSION} versions:set -B -V"
script:
  - "./mvnw -e --settings continuous-deployment/mvnsettings.xml -Dmaven.deploy.skip=true install -B -V"
deploy:
  provider: script
  script: "./mvnw -e --settings continuous-deployment/mvnsettings.xml -Dmaven.deploy.skip=${MAVEN_DEPLOY_SKIP} deploy -B -V"
  on:
    repo: payworks/tcp-mocker
    branches:
      only:
        - master

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.24.1
    - TESTCONTAINERS_RYUK_DISABLED=true
    - secure: "YVy+wyRM44E4UjqXmK9IJy7rfDHf2dlFDdxID5L70ANqUoVr35MTOoeatsjeRgIVK6keArlfcay38Bs5vYyNI//m0GA+XunP0cy4+/quIQhWVMshVnlTf4PHxSh/qSgAdSOAEzL21I7gzsHD8GScc+ef+R/qi/6CCtT2Os72o7OPLd+m2F3cuwEQlLYFUVPVMvSpNsK7s9nIoL96aKahPOLt0myOZYFC031YxIdAJZTnGmIyh2iueAAa38iEI4uy7ghYUacpTFx8DlbrsA4tJoZ2AJUcSG81DwI8cCp13e7lzZ4vDQwdG6pV7G93FWJsmS2oOcLzL46BJHSrH2ZLXMSCkoeqTZ8KsANPIiOqvUvuB3Xbx8SV2HiodreDsan19t2ajTp1Xcp23kASvQVJWCzlBwzpeioy7TqLpUpKggcyrnRn0rQIdsXApYTtxB/YroNIeQtDGSbUOzxS57hi2rEr3v/fVi5nHZnpsi6fwE5gJa/nHBGQeAxFC47RMGU2hmWA0CgE1CG8BGPmIp03G4GOcn9/76s/XNzU0UP5O4gFWY+XKgPxq66xs/cApFR5iVImoHYlocf/WYC64ov5AUuXtDEBGXoSUvbIdgVJab2ZwmauZ088VQPlHF5PFOleJPi+g1O0OxAB8M6JmJIlKBjmTqCcSZcZdiO6iryXwVY="
    - secure: "Df2oKxSi6Zzy29CBgp0Ewre6jwR2V1MG1n0ZjM1ZaKZouE1GXkiake/7fewLwr4PETDMk0spfHGqHHYb6NTDTHJon2MmwE9/YJ2ngIWmDbIfepefT2Pyk0qr7ejtWu9zhL6jjpbmxJslLctMfPjLorwedPJN1LJ55wA9MiIhhnIKRBTbGJk9OThFkDBZT1MESCvzdUJe5YCZ0b/3hAwkw5LqtWpMHVE2HnWS31UOYosUqnOjHo/WC7c0DrUdHzt7EtdEDzRQpAOEVvubW2zuj5S1TVbFJkOZF5rtTHog9D2NccFt5bPwt7dmnngR0RXC09clgcEtyxI2ATu1jRy93I1Lo7NwlEGH+GWE/y2ZE+SN9cvGRGpvkP7uxk2gz5pD3vvTF6l7FAatrgsv03SyCk10ivJCWAtJjafF3Vs2AhxcbXoDPXVjnCwcg9mNd4WvATvWMtYQPvpS1b6rBLSMPakgTkQ1qU85YNVGvASFVlrI6RKxh3aorfO0IMXIiOBNy6jweiun1p7xahPsSS1uxP60f/RRuSVfkFnpieNTleAkb2hnwqWC4cIeqpZ6gu4Jg4XvXxMf7fuhUCVoqT0v7/GQQcS98rqBoXs8RXAmhD3l+ZOgsvyS/nkhdFkMQlFvhLcB6XtcUOLI+00KE/CCDMHXox+lQ2TXRQve9cwpqQA="
    - secure: "ie5dZSmKHZQM4MLlrouIi+XsWOzYRhIltLEhj05bJ+zA80GImmJticxtblz3f2HdY4wvXIL/5KQyYjuqCwd1a8F5tRfPFdiW9D8YD/XdguNg+04B4TulSV1y9CR/jeoK9kV7zEifzxo4S7km1zv4HMP93DuW8njuhZnsQhFWjfxxwxeCLNZ7kKP/OyoLfu5p+Xo7oGzgVVrM5t6bP7f/xTZTS82Jy0+0GiTvFb41l6LycrU9IvyHeUt/0k2MnbH1fZgxu4yXB98U1IvoF3qJL2n8yQb7FtL2uPoF5aS7Gb4P8uZoOjlGndduLnQHr77JC4aZPzxAveZ4cWoj2z4YZH4RVN9KSIn77uB5/BdJ6L6UMUNGVW4mUCC+51PgoMIiqMs8H0FsVXCvyY/DkgmBD73N26RA4LKl1VVgyzqZryGDwMrQAjFIWJ7FUywVAaFoBVVzDDr82KnAEpHRZ11We0xqkRfDqef++77lf2UXvOOD1Nb05gkF4Ftj2onhOFlrTlqVQ6cHBdZszYXyJ/dmF/I+6chA8ISvwA3XJ9wx11EK8kRWpYUpg1c0Cs/hl+OuhhVH7lra4x0MmOgDx2hT+tICSadVekKzV+lGi0+m2y4yonn8lAIJDACk+RMQxVlwqmYK9eH0drLxnOiffmx+tJ/IEV5EDfqnmNKrtquRiTY="
    - secure: "i40jJ+zF5RXq5nbQVE6oMzxfKtBivVc0NXUDrBvcyPBBYAU9Prqt/yNF6TtpcD6SGpHB0xDhir5pPi+QNQsfYW0bbooiSyaCg4vtVsjH65brfMKmqqLvWjZXcON0LXGh416SqYReAXAalM4M/1VABVDzzWk+YqHbuHRVf/7KRCcNVL6CcOWxVCl3IwRHQq2Y6CKghLjCfrYO4O3TqT9fLrZIuAF3rQRZ7ZZ7hCzc2FbUrsGcXzXCJgqJnCi2hRBwqAWL1bDCmI27zbNIa1eSTt/RWogGnhbSsoYrbVqMNiQdaiy4/EdFqiz2xc7EkTf/rjrubL0be0Mjo3cRvZC21CorRZ9PBVXCnnLpR4iv0F041HZj3gGoM2emAuuoJqDqUugpQhITD4XWvGLNrXNISZHkXnvkITb7SneZvPy/oXPgDu2Tke2S48yWzsiocE2qvbHw4xy8xXDhLtWFoGf9cFthEVwErNOvM7UpCVNnH7Wrqp0oZo+GAvyHxR63Vbl9V9RZ1znSWrVnyutBTv32QKCIBNqPpA80RLGvHqRCq/VVzntXZcYRMkKfPJbft5haYtqGnlQ3xT3BHICClS1QXy4B829oJbw8BrOUOFaiQZROp51dEMzAFSDFdFtepQ2Af6fHfzbe9byFXVeMI1dFsha1eL0pb809CENWICz8rCo="
    - secure: "nM9gsIwtbmpeIszrwe6FcUsaciQyERe9KcgOQKvQaWRhopFvTMcX9g4iGFDkhBoac/nRA9ft32jxkgi4w47A4s6Bov0JeCO7rk19TOOo8CFzIxFe2FVX/rvFVit5DU6JaSNQfZk+AvX0M5VjBeLWJuPyrGUaVTFKRkxS5+lfdDINS8YwZjPSrYv4Bldw2KQh+JFkfGwd4GtAZqVAZGD5MyxaqBOVKUdM0Wxr9XFzycykfIKcn2fUEpQ6BZsPDfp0/kAtGkPC1uLxo9/zb7DBYdGc0/ReLe2DRZVDgrPfLNC5TUt3asCA7NgjuPsVSzlm4ZPbU8ZVgoJk+77esff7njKAt0KZZtt9xHWhypkeQXaFYr9LBxFcsaaUJoQy6SkSNHvLWSLZRBeiOjO0+xUyQkdrNohQbrfQ+zgqRYYx9XSGn1bdl/bBGQalQ496+HDvnLMu5TwbFsJzQ0/O+gGFvarMvUnH4ZRghPyUmIrMOrMo2UGnfr3eUBF+2omI8CxI8FAdsHURefe+fRoGZmqbBDJqlEFErf5AqBav0gdh2q7OY+VZ8CiZRZ9nBnHEkY7I/3QC3zGEMPP0p5Zojg+c0qVkaBxq8K9RWMAnv9MOAB+gEowOWX0UkECUUXGmmi3ONlIz5x48BtUDWRD0N6kXID2cApKVtAu6TUXBLq7GSio="
    - secure: "Qye+h1n+Fnbfj/dKyWcU6zUkG/vsbCoRcd1pgbgxn7DuKwuasVJ5VyNxd0r9tSyC0mSnIb1ykaTkqo3tIdl0uFKZEokheF6eR336xxZYpQNXHrTSb8TVqJLBhlAtPFMFu/pes6pfC7dWd68957Mshxp4YLDzcn+9FhCtwGP256zl5o/435jaWK+k0MLpfwd9j+YLz03NOoqyfEP+G+6Wyrur1zZSPIXIwT1T7uxYYbF+dqdre01bXgUL6VPd7iwr9mumUGkb1cOl+2P55aSu2nLka6I1ibpN875ba5FwxUtrDsZUzgdPXFlFuPHfzh+biOQe6U0jOtvd4hQJTN/BEe+JUs+xkJZVCRanjYosa21k74P36wJDNRyyw/PUewJvSBKX7aUwz3WomN48lt6HNkxrJNdNQksEANSs+OArMw0I05dOHVqpsBF//AIYeI2rSOFE4aK6Y1/Oo4VAjIw9J2T2Q9Qb+BjPSkyejUPPva++Q4fWRaTQ2ZCIkbfUNq6OFQDFExQJkwIbcLOu/NSHecahDUc2PCP1CsoaSRH5aYjACtYi8xRR4vxpFaoOYCnMFzQgwhhf2ICcN+aVfzHrWPbmxdh87/H8xqH4HjWRAqxXSvUP4dHKrmMBNOohN5+yyyAnognJqfDCxFUxstLkgsW3cjbrM1NnvCnladwSoF8="
    - secure: "BJfrp9rL/HNbmUOsJREeeMhTu1FHImwKBkeYPUwB4IFe7hwwtFVf9HmZJYKOazOB9wGjI6CYNhSIq4SH48KdUZqnWejQVGHQCUyp9nm2fdQrKVrwHPiHTNTud4csPFRLav/zwI0aVLnvrPBAD3m2TNx4M1ubRzsD32S9c0URAY4O63VDkjN9zVICqGPP189xHlbYAAJ4Ww2eWsdn9o31Mpot40Th4JlCJeo+O0uXtMK1VUWK+vLrDilv4xDvDfF5wjOEdIQenEiujXNnBKTMt6EIDe0rkM1OqatnFKsM1i1K7rTaSD6pcfumiuML7H59dJkMpblN0bWsfsc7t4Lz60LT0MizW2n56+5Vu1KxMj1wyv40q4uDVHmsirh1xPUUeRd4W+K/VbjaBKT/A5/lAq+RhRurIObd5JdP5Jukf9Vs/XOP7G8SpoXL5b6bI2UKLEUf/UuUKcqUMiiSW37GrDEd3lSIYdhkVaG8SGG9aZrLjbQeacHNbV/HF+InfTAQT4XKwjzebFz4KhGFvJd6XqNVEOxAKSZS6ZIxa110b1AulTcxBxqSk49qSNv25rzWghnj89HLgXoaqe/HKSEv7w62L/gruTpRdjBEqtt501I7WOI2CaOLmGlRFGyW+Y6nAeBxHyMrcBXOiOKwL3P/VhznYt4s9fz543zkAIopbVg="
